{"version":3,"file":"static/js/514.135f704b.chunk.js","mappings":"iQAEaA,E,OAAYC,EAAAA,GAAH,qE,SCIP,SAASC,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,qGAC8BC,EAAAA,EAAAA,IAAkBN,GADhD,OACUO,EADV,OAEIH,EAAWG,GAFf,4CADY,uBAAC,WAAD,wBAKZC,EACH,GAAE,CAACR,KAGA,yBACMG,EAAQM,QAGN,SAACZ,EAAD,UACKM,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OACT,2BACI,qCAAaF,MACb,uBAAIE,MAFCD,EADA,OAHjB,qEAaf,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ReviewSec = styled.ul`\n    padding: 2 40px;\n    list-style: none;\n`;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport { fetchMovieReviews } from \"services/api\";\nimport { ReviewSec } from \"./Reviews.styled\";\n\nexport default function Reviews() {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        async function getMovieReviews() {\n            const movieReview = await fetchMovieReviews(movieId);\n            setReviews(movieReview);\n        }\n        getMovieReviews();\n    }, [movieId]);\n\n    return (\n        <div>\n            {!reviews.length ? (\n                <p>We don`t have any reviews for this movie</p>\n            ) : (\n                <ReviewSec>\n                    {reviews.map(({ author, id, content }) => (\n                        <li key={id}>\n                            <h3>Author: {author}</h3>\n                            <p>{content}</p>\n                        </li>\n                    ))}\n                </ReviewSec>\n            )}\n        </div>\n    );\n};\n\nReviews.propTypes = {\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n}"],"names":["ReviewSec","styled","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","movieReview","getMovieReviews","length","map","author","id","content"],"sourceRoot":""}
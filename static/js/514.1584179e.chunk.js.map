{"version":3,"file":"static/js/514.1584179e.chunk.js","mappings":"wQAEaA,E,QAAYC,EAAAA,GAAH,qE,SCIP,SAASC,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,qGAC8BC,EAAAA,EAAAA,IAAkBN,GADhD,OACUO,EADV,OAEIH,EAAWG,GAFf,4CADY,uBAAC,WAAD,wBAKZC,EACH,GAAE,CAACR,KAGA,yBACMG,EAAQM,QAGN,SAACZ,EAAD,UACKM,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OACT,2BACI,qCAAaF,MACb,uBAAIE,MAFCD,EADA,OAHjB,qEAaf,C,mMC3BM,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,EAAAA,EAAAA,IAAA,uBADpB,cACGC,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACoBL,EAAAA,EAAAA,IAAA,8BAAiCK,IADrD,cACGJ,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BT,GAA9B,uFACoBG,EAAAA,EAAAA,IAAA,iBAAoBH,IADxC,cACGI,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BV,GAA9B,yFACoBG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,aADpB,cACGI,EADH,OAEGO,EAAOP,EAASC,KAAKM,KAFxB,kBAGIA,GAHJ,kEAMA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCM,GAAjC,yFACoBG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,aADpB,cACGI,EADH,OAEGO,EAAOP,EAASC,KAAKC,QAFxB,kBAGIK,GAHJ,kEA1BPR,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBS,QAAS,mC","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.js","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ReviewSec = styled.ul`\n    padding: 2 40px;\n    list-style: none;\n`;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport { fetchMovieReviews } from \"services/api\";\nimport { ReviewSec } from \"./Reviews.styled\";\n\nexport default function Reviews() {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        async function getMovieReviews() {\n            const movieReview = await fetchMovieReviews(movieId);\n            setReviews(movieReview);\n        }\n        getMovieReviews();\n    }, [movieId]);\n\n    return (\n        <div>\n            {!reviews.length ? (\n                <p>We don`t have any reviews for this movie</p>\n            ) : (\n                <ReviewSec>\n                    {reviews.map(({ author, id, content }) => (\n                        <li key={id}>\n                            <h3>Author: {author}</h3>\n                            <p>{content}</p>\n                        </li>\n                    ))}\n                </ReviewSec>\n            )}\n        </div>\n    );\n};\n\nReviews.propTypes = {\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n}","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: 'ad18c129b2412cb77d4a3538879c83fc'\n};\n\nexport async function fetchTrending() {\n    const response = await axios.get(`/trending/movie/day`);\n    return response.data.results;\n};\n\nexport async function fetchMovieByName(query) {\n    const response = await axios.get(`/search/movie?query=${query}`);\n    return response.data.results;\n};\n\nexport async function fetchMovieById(id) {\n    const response = await axios.get(`/movie/${id}`);\n    return response.data;\n};\n\nexport async function fetchMovieCast(id) {\n    const response = await axios.get(`/movie/${id}/credits`);\n    const cast = response.data.cast;\n    return cast;\n};\n\nexport async function fetchMovieReviews(id) {\n    const response = await axios.get(`/movie/${id}/reviews`);\n    const cast = response.data.results;\n    return cast;\n}"],"names":["ReviewSec","styled","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","movieReview","getMovieReviews","length","map","author","id","content","fetchTrending","axios","response","data","results","fetchMovieByName","query","fetchMovieById","fetchMovieCast","cast","api_key"],"sourceRoot":""}
{"version":3,"file":"static/js/73.dd259f27.chunk.js","mappings":"sRAEaA,EAAWC,EAAAA,EAAAA,GAAH,iLAURC,EAAaD,EAAAA,EAAAA,IAAH,gEAKVE,EAAQF,EAAAA,EAAAA,GAAH,2CAILG,EAAYH,EAAAA,EAAAA,GAAH,4CAITI,EAAYJ,EAAAA,EAAAA,EAAH,wC,SCjBf,SAASK,IACZ,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,qGAC4BC,EAAAA,EAAAA,IAAeN,GAD3C,OACUO,EADV,OAEIH,EAAQG,GAFZ,4CADY,uBAAC,WAAD,wBAKZC,EACH,GAAE,CAACR,KAGA,SAACP,EAAD,UACGU,EAAKM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,UAACjB,EAAD,YACE,SAACD,EAAD,CACEmB,IACED,EAAY,0CAC2BA,GAD3B,sCAIdE,IAAKJ,KAEP,SAACd,EAAD,UAAYc,KACZ,SAACb,EAAD,2BACA,SAACA,EAAD,UAAYc,MAXFF,EADJ,KAiBnB,C,mMChCM,SAAeM,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,EAAAA,EAAAA,IAAA,uBADpB,cACGC,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACoBL,EAAAA,EAAAA,IAAA,8BAAiCK,IADrD,cACGJ,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bb,GAA9B,uFACoBO,EAAAA,EAAAA,IAAA,iBAAoBP,IADxC,cACGQ,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAA8BI,GAA9B,yFACoBO,EAAAA,EAAAA,IAAA,iBAAoBP,EAApB,aADpB,cACGQ,EADH,OAEGf,EAAOe,EAASC,KAAKhB,KAFxB,kBAGIA,GAHJ,kEAMA,SAAeqB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCd,GAAjC,yFACoBO,EAAAA,EAAAA,IAAA,iBAAoBP,EAApB,aADpB,cACGQ,EADH,OAEGf,EAAOe,EAASC,KAAKC,QAFxB,kBAGIjB,GAHJ,kEA1BPc,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBQ,QAAS,mC","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.js","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const CastList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 15px;\n    list-style: none;\n    justify-content: center;\n    text-align: center;\n    padding: 0;\n`;\n\nexport const PhotoActor = styled.img`\n    display: block;\n    width: 150px;\n`;\n\nexport const Actor = styled.li`\n    width: 150px;\n`;\n\nexport const NameActor = styled.h3`\n    margin: 7px 0;\n`;\n\nexport const Character = styled.p`\n    margin: 0;\n`;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchMovieCast } from \"services/api\";\nimport PropTypes from 'prop-types';\nimport { CastList, Character, PhotoActor } from \"./Cast.styled\";\nimport { Actor } from \"./Cast.styled\";\nimport { NameActor } from \"./Cast.styled\";\n\nexport function Cast () {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        async function getMovieCast() {\n            const movieCast = await fetchMovieCast(movieId);\n            setCast(movieCast);\n        }\n        getMovieCast();\n    }, [movieId]);\n\n    return (\n        <CastList>\n          {cast.map(({ id, name, character, profile_path }) => (\n            <Actor key={id}>\n              <PhotoActor\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n                    : `https://via.placeholder.com/250x375`\n                }\n                alt={name}\n              />\n              <NameActor>{name}</NameActor>\n              <Character>Character: </Character>\n              <Character>{character}</Character>\n            </Actor>\n          ))}\n        </CastList>\n    );\n};\n\nCast.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: 'ad18c129b2412cb77d4a3538879c83fc'\n};\n\nexport async function fetchTrending() {\n    const response = await axios.get(`/trending/movie/day`);\n    return response.data.results;\n};\n\nexport async function fetchMovieByName(query) {\n    const response = await axios.get(`/search/movie?query=${query}`);\n    return response.data.results;\n};\n\nexport async function fetchMovieById(id) {\n    const response = await axios.get(`/movie/${id}`);\n    return response.data;\n};\n\nexport async function fetchMovieCast(id) {\n    const response = await axios.get(`/movie/${id}/credits`);\n    const cast = response.data.cast;\n    return cast;\n};\n\nexport async function fetchMovieReviews(id) {\n    const response = await axios.get(`/movie/${id}/reviews`);\n    const cast = response.data.results;\n    return cast;\n}"],"names":["CastList","styled","PhotoActor","Actor","NameActor","Character","Cast","movieId","useParams","useState","cast","setCast","useEffect","fetchMovieCast","movieCast","getMovieCast","map","id","name","character","profile_path","src","alt","fetchTrending","axios","response","data","results","fetchMovieByName","query","fetchMovieById","fetchMovieReviews","api_key"],"sourceRoot":""}